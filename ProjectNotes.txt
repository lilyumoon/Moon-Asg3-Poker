======= Lily Moon
======= Assignment 3 - Video Poker
======= Advanced .NET
======= Due 2/23/25
*
*
*
======= May be incomplete or outdated.
======= This is a living document, not a thriving document. :)
*
*
*

Grading:
	B:
		*The Game must keep track of the Players balance.
		*The Game must let the player change their bet before the initial draw, and not let the player change the bet until the round is over.
		*The Game must correctly score the hand.
	A:
		*The UI must be easy to work with and does not have any MessageBoxes
		*All calculations must be 100% correct
		*Method, Class and Variable names following course coding standards

Videos:
	* https://northwoodtech.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=117f80f0-4f40-48c5-82d9-afa900e7ccd4
	* https://northwoodtech.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=520aaec8-9583-4f70-8746-ae3d00af2fae
	* https://northwoodtech.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=4f46974e-0977-450d-9070-afb000e8324a



Classes:
	Card.cs
		Properties:
			* rank
			* suit
			* imageIndex
		Methods:
			* constructor 
				(rank, suit, image index)
			* tostring (ex. Ace of Clubs, Seven of Diamonds, etc)
			* getRankSuit (1C, 7D, etc)

	CardContainer.cs
		* Contains common properties and methods that Deck.cs and Hand.cs share
		* cards
		* addCard
		* clearCards

	Deck.cs (extends CardContainer)
		* Similar to Blackjack assignment's Deck.cs, but not trying to do as much
		* Hand.cs class will offload some of the extraneous functionality

		Properties:
		Methods:
			* constructor
			* resetDeck
			* drawCardFromDeck

	Hand.cs (extends CardContainer)
		Properties:
			* cards
			* heldStates

		Methods:
			* constructor (List of cards)
			* replaceCard (index of card to replace)

	Game.cs
		* general gameflow
		Properties:
			* credits
			* bet


======= Feedback Questions:

1: What is not working correctly in your code?
	* As far as I know, all features currently work correctly.
	* There are a couple of methods in Form.cs that I wrote but did not use,
	* with the thought that it might look neat to ease the color transition
	* of the highlighted scoring table entry, but it looked kinda clunky and I couldn't justify the time
	* to try to brush up on threading and time-slicing (I can't remember the right term right now).


2: What did this assignment teach you about Classes?
	* I think this assignment helped to reinforce the idea that classes should be separated based on
	* having a single / thematic responsibility


3: What was the most difficult part for you of this assignment?
	* I'm still getting used to navigating the features of the Design editor.
	* A lot of things that I would have a tendency to set programatically, 
	* I've found can be set within the Design editor. I'm trying to lean into that.


4: Did I show too much code in the tips and videos? 
	* I don't think so.


5: Do you understand the difference between getters and setters vs properties?
	* Instead of calling getters and setters directly, properties can be used to encapsulate
	* those methods and make them publically available. Getters and setters can provide opportunities to custom implement access to fields.